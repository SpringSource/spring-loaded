def aspectjVersion = "1.7.1"

configurations {
	ajc
	aspects
	ajInpath
}

dependencies {
	ajc "org.aspectj:aspectjtools:$aspectjVersion"
	compile "cglib:cglib:2.2.2"
	compile "org.aspectj:aspectjrt:$aspectjVersion"
	compile 'asm:asm-all:3.2'
}

sourceSets {
	main {
		java {
			srcDir 'src'
			srcDir 'cglibsrc'
			srcDir 'subsrc'
			srcDir 'supersrc'
		}
	}
}

compileJava.deleteAllActions()
compileJava << {
	def srcDirs = sourceSets.main.java.srcDirs
	srcDirs.each { inputs.dir it }
	def destDir = sourceSets.main.output.classesDir
	outputs.dir destDir
	doLast {
		ant.taskdef(
				resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties',
				classpath: configurations.ajc.asPath)

		ant.iajc(
				source: sourceCompatibility,
				target: targetCompatibility,
				destDir: sourceSets.main.output.classesDir.absolutePath,
				fork: 'true',
				X: 'noInline',
				aspectPath: configurations.aspects.asPath,
				inpath: configurations.ajInpath.asPath,
				sourceRootCopyFilter: '**/*.java,**/*.aj',
				classpath: configurations.compile.asPath) {
					sourceroots {
						sourceSets.main.java.srcDirs.each { dir ->
							pathelement(location: dir.absolutePath)
						}
					}
				}
	}
}
